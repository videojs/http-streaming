name: github-release
on:
  push:
    tags:
    # match semver versions
    - "v[0-9]+.[0-9]+.[0-9]+"
    # match semver pre-releases
    - "v[0-9]+.[0-9]+.[0-9]+-*"
jobs:
  github-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # We neeed to fetch the entire history as conventional-changelog needs
        # access to any number of git commits to build the changelog.
        with:
          fetch-depth: 0

      - name: read node version from .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        shell: bash
        id: nvm

      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: '${{steps.nvm.outputs.NVMRC}}'
          cache: npm

      - name: npm install
        run: npm i --prefer-offline --no-audit

      - name: build
        run: npm run build-prod

      - name: Check if this is a pre-release
        run: echo ::set-output name=IS_PRE_RELEASE::$(npx is-prerelease && echo "true" || echo "false")
        id: pre-release-check

      - name: delete prerelease tags to build changelog
        run: git tag -l | grep -vE '^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$' | xargs git tag -d
        if: ${{ steps.pre-release-check.outputs.IS_PRE_RELEASE == 'false' }}

      - name: Generate current release changelog
        run: npx conventional-changelog -p videojs -r 2 -o RELEASE-CHANGELOG.md

      - name: get dashed package version for netlify
        run: echo ::set-output name=VERSION::$(node -e "process.stdout.write(require('./package.json').version.split('.').join('-'))")
        id: get-version
        shell: bash

      - name: add netlify preview to release notes
        run: |
          echo "" >> RELEASE-CHANGELOG.md
          echo "[netlify preview for this version](https://v${{steps.get-version.outputs.VERSION}}--videojs-http-streaming.netlify.app)" >> RELEASE-CHANGELOG.md

      - name: Create Github release
        uses: softprops/action-gh-release@v1
        with:
          body_path: RELEASE-CHANGELOG.md
          token: ${{github.token}}
          prerelease: ${{steps.pre-release-check.outputs.IS_PRE_RELEASE}}
          files: |
            dist/**/*.js
            dist/**/*.css
